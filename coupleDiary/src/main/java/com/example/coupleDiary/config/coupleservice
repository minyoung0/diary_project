//coupleservic

private final RedisTemplate<String, Object> redisTemplate;
    private final CoupleRepository coupleRepository;
    private final UserRepository userRepository;

    // 1) 초대코드 생성 & Redis 저장
    public String createInviteCode(String userId) {
        String inviteCode = UUID.randomUUID().toString().substring(0, 6).toUpperCase();

        // TTL 10분짜리 초대 코드 저장
        redisTemplate.opsForValue().set("invite:" + inviteCode, userId, 10, TimeUnit.MINUTES);

        return inviteCode;
    }

    // 2) 초대코드 입력 → Redis 조회 후 DB 저장
    @Transactional
    public void acceptInviteCode(String inviteCode, String targetUserId) {
        String userId = (String) redisTemplate.opsForValue().get("invite:" + inviteCode);

        if (userId == null) {
            throw new RuntimeException("초대코드가 만료되었거나 잘못되었습니다.");
        }

        // DB에 커플 저장
        Couple couple = new Couple();
        couple.setUser1Id(userId);
        couple.setUser2Id(targetUserId);
        couple.setCreateAt(LocalDateTime.now());
        coupleRepository.save(couple);

        // 사용자 정보 업데이트
        userRepository.updateCoupleId(userId, couple.getId());
        userRepository.updateCoupleId(targetUserId, couple.getId());

        // 초대코드 삭제
        redisTemplate.delete("invite:" + inviteCode);
    }